{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mbulelo/IVDLMS/src/screens/QuestionScreen.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar QuestionScreen = function QuestionScreen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var quizId = route.params.quizId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    questions = _useState2[0],\n    setQuestions = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nationalId = _useState4[0],\n    setNationalId = _useState4[1];\n  var _useState5 = useState(600),\n    _useState6 = _slicedToArray(_useState5, 2),\n    timeLeft = _useState6[0],\n    setTimeLeft = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    quizFinished = _useState8[0],\n    setQuizFinished = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    idEntered = _useState10[0],\n    setIdEntered = _useState10[1];\n  var _useState11 = useState({}),\n    _useState12 = _slicedToArray(_useState11, 2),\n    applicantDetails = _useState12[0],\n    setApplicantDetails = _useState12[1];\n  useEffect(function () {\n    if (idEntered) {\n      fetchQuestions();\n      var timer = setTimeout(function () {\n        handleTimerExpiration();\n      }, timeLeft * 1000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [idEntered]);\n  var fetchQuestions = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield fetch(`http://localhost:8080/quizzes/${quizId}/questions`);\n        var data = yield response.json();\n        setQuestions(data.map(function (question, index) {\n          return _objectSpread(_objectSpread({}, question), {}, {\n            number: index + 1\n          });\n        }));\n      } catch (error) {\n        console.error('Error fetching questions:', error);\n      }\n    });\n    return function fetchQuestions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var fetchApplicantDetails = function () {\n    var _ref3 = _asyncToGenerator(function* (id) {\n      try {\n        var response = yield fetch(`http://localhost:8080/applicants/${id}`);\n        if (response.ok) {\n          var data = yield response.json();\n          if (data.applicantDetails) {\n            setApplicantDetails(data.applicantDetails);\n          } else {\n            Alert.alert('Error', 'Applicant details not found.');\n          }\n        } else {\n          Alert.alert('Error', 'Failed to fetch applicant details.');\n        }\n      } catch (error) {\n        console.error('Error fetching applicant details:', error);\n        Alert.alert('Error', 'Failed to fetch applicant details.');\n      }\n    });\n    return function fetchApplicantDetails(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleAnswerPress = function handleAnswerPress(questionIndex, answerId) {\n    setQuestions(function (prevQuestions) {\n      return prevQuestions.map(function (question, index) {\n        if (index === questionIndex) {\n          return _objectSpread(_objectSpread({}, question), {}, {\n            answers: question.answers.map(function (answer) {\n              if (answer.id === answerId) {\n                return _objectSpread(_objectSpread({}, answer), {}, {\n                  selected: true\n                });\n              } else {\n                return _objectSpread(_objectSpread({}, answer), {}, {\n                  selected: false\n                });\n              }\n            })\n          });\n        } else {\n          return question;\n        }\n      });\n    });\n  };\n  var calculateScore = function calculateScore() {\n    var totalQuestions = 0;\n    var correctAnswers = 0;\n    questions.forEach(function (question) {\n      var selectedAnswer = question.answers.find(function (answer) {\n        return answer.selected;\n      });\n      if (selectedAnswer) {\n        totalQuestions++;\n        if (selectedAnswer.is_correct) {\n          correctAnswers++;\n        }\n      }\n    });\n    if (totalQuestions === 0) {\n      return 0;\n    }\n    var percentage = correctAnswers / totalQuestions * 100;\n    return percentage.toFixed(2);\n  };\n  var submitQuizResponses = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var score = calculateScore();\n      console.log('Score:', score);\n      try {\n        var response = yield fetch(`http://localhost:8080/quizzes/${quizId}/submit`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            nationalId: nationalId,\n            answers: questions.map(function (question) {\n              var _question$answers$fin;\n              return {\n                questionId: question.id,\n                answerId: ((_question$answers$fin = question.answers.find(function (answer) {\n                  return answer.selected;\n                })) == null ? void 0 : _question$answers$fin.id) || null\n              };\n            }),\n            score: score\n          })\n        });\n        if (response.ok) {\n          Alert.alert('Success', 'Quiz responses submitted successfully.');\n        } else {\n          Alert.alert('Error', 'Failed to submit quiz responses.');\n        }\n      } catch (error) {\n        console.error('Error submitting quiz responses:', error);\n        Alert.alert('Error', 'Failed to submit quiz responses. Please try again later.');\n      }\n    });\n    return function submitQuizResponses() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleTimerExpiration = function handleTimerExpiration() {\n    setQuizFinished(true);\n    submitQuizResponses();\n    navigation.navigate('ScoreScreen', {});\n  };\n  useEffect(function () {\n    if (!idEntered) {\n      return;\n    }\n    var interval = setInterval(function () {\n      setTimeLeft(function (prevTimeLeft) {\n        return prevTimeLeft - 1;\n      });\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [idEntered]);\n  var formattedTime = function formattedTime() {\n    var minutes = Math.floor(timeLeft / 60);\n    var seconds = timeLeft % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  var handleStartQuiz = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      if (!nationalId || nationalId.length !== 12) {\n        Alert.alert('Error', 'Please enter a 12-digit National ID.');\n        return;\n      }\n      yield fetchApplicantDetails(nationalId);\n      setIdEntered(true);\n    });\n    return function handleStartQuiz() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  if (!idEntered) {\n    return _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Enter Your National ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"National ID\",\n        value: nationalId,\n        onChangeText: setNationalId,\n        keyboardType: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, _this), _jsxDEV(Button, {\n        title: \"Start Quiz\",\n        onPress: handleStartQuiz\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, _this);\n  }\n  if (quizFinished) {\n    return score;\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.timer,\n      children: formattedTime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.headerText,\n        children: `National ID: ${nationalId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.headerText,\n        children: `Name: ${applicantDetails.first_name || 'N/A'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, _this), _jsxDEV(Text, {\n        style: styles.headerText,\n        children: `Surname: ${applicantDetails.last_name || 'N/A'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, _this), _jsxDEV(FlatList, {\n      style: styles.flatList,\n      data: questions,\n      renderItem: function renderItem(_ref6) {\n        var item = _ref6.item;\n        return _jsxDEV(View, {\n          style: styles.questionContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.questionText,\n            children: `${item.number}. ${item.question_text}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, _this), _jsxDEV(FlatList, {\n            style: styles.answerList,\n            data: item.answers,\n            renderItem: function renderItem(_ref7) {\n              var answer = _ref7.item,\n                index = _ref7.index;\n              return _jsxDEV(TouchableOpacity, {\n                style: [styles.answerButton, answer.selected && styles.selectedAnswerButton],\n                onPress: function onPress() {\n                  return handleAnswerPress(item.number - 1, answer.id);\n                },\n                children: _jsxDEV(Text, {\n                  style: styles.answerText,\n                  children: answer.answer_text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, _this);\n            },\n            keyExtractor: function keyExtractor(answer) {\n              return answer.id.toString();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, _this);\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, _this), _jsxDEV(Button, {\n      title: \"Submit Quiz Responses\",\n      onPress: submitQuizResponses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  flatList: {\n    flex: 1\n  },\n  questionContainer: {\n    marginBottom: 20\n  },\n  questionText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  answerList: {\n    marginTop: 10\n  },\n  answerButton: {\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    marginVertical: 5\n  },\n  selectedAnswerButton: {\n    backgroundColor: 'green'\n  },\n  answerText: {\n    fontSize: 16\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  timer: {\n    alignSelf: 'flex-end',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  header: {\n    marginBottom: 20\n  },\n  headerText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default QuestionScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","StyleSheet","TextInput","Button","Alert","jsxDEV","_jsxDEV","QuestionScreen","_ref","route","navigation","quizId","params","_useState","_useState2","_slicedToArray","questions","setQuestions","_useState3","_useState4","nationalId","setNationalId","_useState5","_useState6","timeLeft","setTimeLeft","_useState7","_useState8","quizFinished","setQuizFinished","_useState9","_useState10","idEntered","setIdEntered","_useState11","_useState12","applicantDetails","setApplicantDetails","fetchQuestions","timer","setTimeout","handleTimerExpiration","clearTimeout","_ref2","_asyncToGenerator","response","fetch","data","json","map","question","index","_objectSpread","number","error","console","apply","arguments","fetchApplicantDetails","_ref3","id","ok","alert","_x","handleAnswerPress","questionIndex","answerId","prevQuestions","answers","answer","selected","calculateScore","totalQuestions","correctAnswers","forEach","selectedAnswer","find","is_correct","percentage","toFixed","submitQuizResponses","_ref4","score","log","method","headers","body","JSON","stringify","_question$answers$fin","questionId","navigate","interval","setInterval","prevTimeLeft","clearInterval","formattedTime","minutes","Math","floor","seconds","handleStartQuiz","_ref5","length","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","input","placeholder","value","onChangeText","keyboardType","onPress","header","headerText","first_name","last_name","flatList","renderItem","_ref6","item","questionContainer","questionText","question_text","answerList","_ref7","answerButton","selectedAnswerButton","answerText","answer_text","keyExtractor","toString","create","flex","paddingHorizontal","paddingTop","fontSize","fontWeight","marginBottom","marginTop","backgroundColor","padding","marginVertical","height","borderColor","borderWidth","alignSelf"],"sources":["/home/mbulelo/IVDLMS/src/screens/QuestionScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet, TextInput, Button, Alert } from 'react-native';\n\nconst QuestionScreen = ({ route, navigation }) => {\n  const { quizId } = route.params;\n  const [questions, setQuestions] = useState([]);\n  const [nationalId, setNationalId] = useState('');\n  const [timeLeft, setTimeLeft] = useState(600); // 10 minutes in seconds\n  const [quizFinished, setQuizFinished] = useState(false);\n  const [idEntered, setIdEntered] = useState(false);\n  const [applicantDetails, setApplicantDetails] = useState({});\n\n  useEffect(() => {\n    if (idEntered) {\n      fetchQuestions();\n      const timer = setTimeout(() => {\n        handleTimerExpiration();\n      }, timeLeft * 1000);\n  \n      return () => clearTimeout(timer); // Cleanup on unmount\n    }\n  }, [idEntered]);\n\n  const fetchQuestions = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/quizzes/${quizId}/questions`);\n      const data = await response.json();\n      setQuestions(data.map((question, index) => ({ ...question, number: index + 1 })));\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n    }\n  };\n\n  const fetchApplicantDetails = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:8080/applicants/${id}`);\n      if (response.ok) {\n        const data = await response.json();\n        if (data.applicantDetails) {\n          setApplicantDetails(data.applicantDetails);\n        } else {\n          Alert.alert('Error', 'Applicant details not found.');\n        }\n      } else {\n        Alert.alert('Error', 'Failed to fetch applicant details.');\n      }\n    } catch (error) {\n      console.error('Error fetching applicant details:', error);\n      Alert.alert('Error', 'Failed to fetch applicant details.');\n    }\n  };\n\n  const handleAnswerPress = (questionIndex, answerId) => {\n    setQuestions((prevQuestions) => {\n      return prevQuestions.map((question, index) => {\n        if (index === questionIndex) {\n          return {\n            ...question,\n            answers: question.answers.map((answer) => {\n              if (answer.id === answerId) {\n                return { ...answer, selected: true };\n              } else {\n                return { ...answer, selected: false };\n              }\n            }),\n          };\n        } else {\n          return question;\n        }\n      });\n    });\n  };\n\nconst calculateScore = () => {\n  let totalQuestions = 0;\n  let correctAnswers = 0;\n\n  questions.forEach((question) => {\n    const selectedAnswer = question.answers.find((answer) => answer.selected);\n    if (selectedAnswer) {\n      totalQuestions++;\n      if (selectedAnswer.is_correct) {\n        correctAnswers++;\n      }\n    }\n  });\n\n  if (totalQuestions === 0) {\n    return 0; // Avoid division by zero\n  }\n\n  const percentage = (correctAnswers / totalQuestions) * 100;\n  return percentage.toFixed(2); // Return score as a percentage with 2 decimal places\n};\n\n\n  const submitQuizResponses = async () => {\n    const score = calculateScore();\n    console.log('Score:', score); // Print the score to the console\n\n    try {\n      const response = await fetch(`http://localhost:8080/quizzes/${quizId}/submit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          nationalId,\n          answers: questions.map((question) => ({\n            questionId: question.id,\n            answerId: question.answers.find((answer) => answer.selected)?.id || null,\n          })),\n          score, // Include the score in the submission\n        }),\n      });\n      if (response.ok) {\n        Alert.alert('Success', 'Quiz responses submitted successfully.');\n      } else {\n        Alert.alert('Error', 'Failed to submit quiz responses.');\n      }\n    } catch (error) {\n      console.error('Error submitting quiz responses:', error);\n      Alert.alert('Error', 'Failed to submit quiz responses. Please try again later.');\n    }\n  };\n\n  const handleTimerExpiration = () => {\n    setQuizFinished(true);\n    submitQuizResponses();\n    navigation.navigate('ScoreScreen', { /* Pass any necessary data */ });\n  };\n\n  useEffect(() => {\n    if (!idEntered) {\n      return; // No need to start the timer if ID is not entered\n    }\n    \n    const interval = setInterval(() => {\n      setTimeLeft((prevTimeLeft) => prevTimeLeft - 1);\n    }, 1000);\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, [idEntered]);\n\n  const formattedTime = () => {\n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  const handleStartQuiz = async () => {\n    if (!nationalId || nationalId.length !== 12) {\n      Alert.alert('Error', 'Please enter a 12-digit National ID.');\n      return;\n    }\n    await fetchApplicantDetails(nationalId); // Fetch applicant details before starting the quiz\n    setIdEntered(true);\n  };\n\n  if (!idEntered) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Enter Your National ID</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"National ID\"\n          value={nationalId}\n          onChangeText={setNationalId}\n          keyboardType=\"numeric\"\n        />\n        <Button title=\"Start Quiz\" onPress={handleStartQuiz} />\n      </View>\n    );\n  }\n\n  if (quizFinished) {\n    return score; // Quiz is finished,  render score\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.timer}>{formattedTime()}</Text>\n      <View style={styles.header}>\n        <Text style={styles.headerText}>{`National ID: ${nationalId}`}</Text>\n        <Text style={styles.headerText}>{`Name: ${applicantDetails.first_name || 'N/A'}`}</Text>\n        <Text style={styles.headerText}>{`Surname: ${applicantDetails.last_name || 'N/A'}`}</Text>\n      </View>\n      <FlatList\n        style={styles.flatList}\n        data={questions}\n        renderItem={({ item }) => (\n          <View style={styles.questionContainer}>\n            <Text style={styles.questionText}>{`${item.number}. ${item.question_text}`}</Text>\n            <FlatList\n              style={styles.answerList}\n              data={item.answers}\n              renderItem={({ item: answer, index }) => (\n                <TouchableOpacity\n                  style={[\n                    styles.answerButton,\n                    answer.selected && styles.selectedAnswerButton,\n                  ]}\n                  onPress={() => handleAnswerPress(item.number - 1, answer.id)}>\n                  <Text style={styles.answerText}>{answer.answer_text}</Text>\n                </TouchableOpacity>\n              )}\n              keyExtractor={(answer) => answer.id.toString()}\n            />\n          </View>\n        )}\n        keyExtractor={(item) => item.id.toString()}\n      />\n      <Button title=\"Submit Quiz Responses\" onPress={submitQuizResponses} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  flatList: {\n    flex: 1,\n  },\n  questionContainer: {\n    marginBottom: 20,\n  },\n  questionText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  answerList: {\n    marginTop: 10,\n  },\n  answerButton: {\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n    marginVertical: 5,\n  },\n  selectedAnswerButton: {\n    backgroundColor: 'green',\n  },\n  answerText: {\n    fontSize: 16,\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n  },\n  timer: {\n    alignSelf: 'flex-end',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  header: {\n    marginBottom: 20,\n  },\n  headerText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\nexport default QuestionScreen;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}